<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:musicPlayer.properties"/>
<!--        Импортируем файл musicPlayer.properties с помощью тега <context:property-placeholder
            переменная classpath: ссылается на файлы, которые находяться в папке resources-->

<!--    Scope задает то, как Spring будет создавать бины

        Scope Singleton используется по умолчанию (когда мы ничего не указываем):
        * по умолчанию создается один обьект (он создается до вызова метода getBean())
        * при всех вызовах getBean() возвращается ссылка на один и тот же единственный обьект)
        Scope Singleton используеься, когда у нашего бина нет изменяемых состояний (stateless)

        Scope Prototype - каждый раз создает новый обьект при вызове метода getBean()
        Scope Prototype используется, когда у нашего бина есть изменяемые состояния (stateful)

        Есть и другие Scope: Request, session, global-session-->

    <bean id="musicBean"
          class="ua.max.springcourse.ClassicalMusic">
        <!--        не абстрактное (not Interface), а что-то конкретное (Class), из чего можно создать обьект-->
    </bean>

    <bean id="musicPlayer"
          class="ua.max.springcourse.MusicPlayer">
        <property name="musicList" ref="musicBean"/>

        <property name="name" value="${musicPlayer.name}"/>
        <property name="volume" value="${musicPlayer.volume}"/>
    </bean>

</beans>
